Started by user admin
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/8-2-pipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Git)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/8-2-pipeline/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/hovhannisyan-code/8-2-fork.git # timeout=10
Fetching upstream changes from https://github.com/hovhannisyan-code/8-2-fork.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/hovhannisyan-code/8-2-fork.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 223dbc3f489784448004e020f2ef224f17a7b06d (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 223dbc3f489784448004e020f2ef224f17a7b06d # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 223dbc3f489784448004e020f2ef224f17a7b06d # timeout=10
Commit message: "Update README.md"
 > git rev-list --no-walk 223dbc3f489784448004e020f2ef224f17a7b06d # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] sh
+ /usr/local/go/bin/go test .
ok  	github.com/netology-code/sdvps-materials	(cached)
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] sh
+ docker build . -t ubuntu-jammy:8082/hello-world:v15
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  259.1kB

Step 1/8 : FROM golang:1.16 AS builder
 ---> 972d8c0bc0fc
Step 2/8 : WORKDIR $GOPATH/src/github.com/netology-code/sdvps-materials
 ---> Using cache
 ---> 45de7c7265fb
Step 3/8 : COPY . ./
 ---> 0736fd9c2ee2
Step 4/8 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o /app .
 ---> Running in 36091238c718
 ---> Removed intermediate container 36091238c718
 ---> 8cac9d1d85f6
Step 5/8 : FROM alpine:latest
 ---> b0c9d60fc5e3
Step 6/8 : RUN apk -U add ca-certificates
 ---> Using cache
 ---> 70dee8f64cbe
Step 7/8 : COPY --from=builder /app /app
 ---> Using cache
 ---> 803b2dbdb5b7
Step 8/8 : CMD ["/app"]
 ---> Using cache
 ---> 8ebef9b8e2cf
Successfully built 8ebef9b8e2cf
Successfully tagged ubuntu-jammy:8082/hello-world:v15
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push)
[Pipeline] sh
+ docker login ubuntu-jammy:8082 -u admin -p admin
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
+ docker push ubuntu-jammy:8082/hello-world:v15
The push refers to repository [ubuntu-jammy:8082/hello-world]
cf97ce89e972: Preparing
3af798cf5e0f: Preparing
a0904247e36a: Preparing
3af798cf5e0f: Pushed
cf97ce89e972: Pushed
a0904247e36a: Pushed
v15: digest: sha256:6116d98d9e2a51066660c551f311669fd785f5f44c2bdf1c47791b286a44c070 size: 950
+ docker logout
Removing login credentials for https://index.docker.io/v1/
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS